// Example of building this when updated:
// python -m grpc_tools.protoc --python_out=. --grpc_python_out=.  -I. flow.proto
//
// Also, to make this work with flowlib, need to change one import in flow_pb2_grpc.py:
// -import flow_pb2 as flow__pb2
// +from . import flow_pb2 as flow__pb2


syntax = "proto3";

service FlowDaemon {
    rpc ApplyWorkflow (ApplyRequest) returns (FlowdResult); // flowctl apply
    rpc DeleteWorkflow (DeleteRequest) returns (FlowdResult); // flowctl delete
    rpc PSQuery (PSRequest) returns (FlowdResult); // flowctl ps
    rpc ProbeWorkflow (ProbeRequest) returns (FlowdResult); // flowctl probe
    rpc RunWorkflow (RunRequest) returns (FlowdResult); // flowctl run
    rpc StartWorkflow (StartRequest) returns (FlowdResult); // flowctl start
    rpc StopWorkflow (StopRequest) returns (FlowdResult); // flowctl stop
}

message FlowdResult {
    int64 status = 1;
    string message = 2;
    string data = 3;
}

message ApplyRequest {
    string bpmn_xml = 1;
    bool stopped = 2;
}

enum RequestKind {
    DEPLOYMENT = 0;
    INSTANCE = 1;
}

message DeleteRequest {
    RequestKind kind = 1;
    repeated string ids = 2;
    // FIXME: Figure out any additional flags and/or arguments.
}

message PSRequest {
    RequestKind kind = 1;
    repeated string ids = 2;
    bool include_kubernetes = 3;
    // FIXME: Figure out any additional flags and/or arguments.
}

message ProbeRequest {
    repeated string ids = 1;
}

message RunRequest {
    string workflow_id = 1;
    repeated string args = 2;
    bool stopped = 3;
    // FIXME: Figure out any additional flags and/or arguments.
}

message StartRequest {
    RequestKind kind = 1;
    repeated string ids = 2;
    // FIXME: Figure out any additional flags and/or arguments.
}

message StopRequest {
    RequestKind kind = 1;
    repeated string ids = 2;
    // FIXME: Figure out any additional flags and/or arguments.
}
